<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Faker.php" path="/">
    <totals>
      <lines total="406" comments="130" code="276" executable="89" executed="89" percent="100.00"/>
      <methods count="19" tested="19" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Schalkt\Faker\Faker" start="9" executable="89" executed="89" crap="49">
      <namespace name="Schalkt\Faker"/>
      <method name="__construct" signature="__construct(array $options)" start="46" end="68" crap="5" executable="11" executed="11" coverage="100"/>
      <method name="init" signature="init(array $options)" start="76" end="79" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="word" signature="word($length, $first, $suffixes)" start="89" end="109" crap="6" executable="10" executed="10" coverage="100"/>
      <method name="words" signature="words($count, $glue, $min, $max, $first, $suffixes)" start="117" end="127" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="sentence" signature="sentence($words)" start="136" end="141" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="repeat" signature="repeat($chars, $min, $max, $segments, $glue)" start="154" end="174" crap="4" executable="10" executed="10" coverage="100"/>
      <method name="text" signature="text($sentences, $min, $max)" start="186" end="196" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="getRandomConsonant" signature="getRandomConsonant($double)" start="206" end="216" crap="2" executable="5" executed="5" coverage="100"/>
      <method name="getRandomVowel" signature="getRandomVowel($double)" start="225" end="235" crap="2" executable="5" executed="5" coverage="100"/>
      <method name="getRandomNextChar" signature="getRandomNextChar($prev)" start="244" end="262" crap="7" executable="11" executed="11" coverage="100"/>
      <method name="isVowel" signature="isVowel($char)" start="270" end="273" crap="2" executable="1" executed="1" coverage="100"/>
      <method name="firstname" signature="firstname($min, $max, $first, $suffixes)" start="283" end="290" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="lastname" signature="lastname($min, $max, $first, $suffixes)" start="299" end="306" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="fullname" signature="fullname($lengthFirst, $lengthLast, $reverse)" start="317" end="330" crap="4" executable="8" executed="8" coverage="100"/>
      <method name="int" signature="int($min, $max)" start="340" end="343" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="boolean" signature="boolean()" start="352" end="355" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="mask" signature="mask($mask, $input)" start="365" end="379" crap="3" executable="6" executed="6" coverage="100"/>
      <method name="email" signature="email()" start="387" end="391" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="password" signature="password($min, $max, $segments, $glue)" start="399" end="404" crap="1" executable="2" executed="2" coverage="100"/>
    </class>
    <coverage>
      <line nr="49">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testNumbers"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="51">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testNumbers"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="52">
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
      </line>
      <line nr="53">
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
      </line>
      <line nr="56">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testNumbers"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="57">
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
      </line>
      <line nr="58">
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
      </line>
      <line nr="61">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testNumbers"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="62">
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
      </line>
      <line nr="65">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testNumbers"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="66">
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
      </line>
      <line nr="78">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testNumbers"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="92">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="94">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="95">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="97">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="98">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="100">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="101">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="104">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="105">
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
      </line>
      <line nr="108">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="120">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="122">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="123">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="126">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="139">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
      </line>
      <line nr="140">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
      </line>
      <line nr="157">
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="158">
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="159">
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="161">
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="163">
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="164">
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="166">
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="167">
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="170">
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="173">
        <covered by="Schalkt\Faker\Tests\FakerTest::testRepeats"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="189">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="191">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="192">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="195">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="209">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="210">
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
      </line>
      <line nr="211">
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
      </line>
      <line nr="213">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="214">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="228">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="229">
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
      </line>
      <line nr="230">
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
      </line>
      <line nr="232">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="233">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="247">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="248">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="249">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="251">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="252">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="253">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="254">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="255">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="256">
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
      </line>
      <line nr="258">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="261">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="272">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testOptions"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testFunnyNames"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testDoubles"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="286">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="288">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="289">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="302">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="304">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="305">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="320">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="321">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="323">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="324">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="325">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="326">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="327">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="328">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
      </line>
      <line nr="342">
        <covered by="Schalkt\Faker\Tests\FakerTest::testNumbers"/>
      </line>
      <line nr="354">
        <covered by="Schalkt\Faker\Tests\FakerTest::testNumbers"/>
      </line>
      <line nr="368">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testNumbers"/>
      </line>
      <line nr="369">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testNumbers"/>
      </line>
      <line nr="370">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testNumbers"/>
      </line>
      <line nr="374">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testNumbers"/>
      </line>
      <line nr="375">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testNumbers"/>
      </line>
      <line nr="378">
        <covered by="Schalkt\Faker\Tests\FakerTest::testWords"/>
        <covered by="Schalkt\Faker\Tests\FakerTest::testNumbers"/>
      </line>
      <line nr="390">
        <covered by="Schalkt\Faker\Tests\FakerTest::testEmails"/>
      </line>
      <line nr="402">
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
      <line nr="403">
        <covered by="Schalkt\Faker\Tests\FakerTest::testPasswords"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Schalkt</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Faker</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5"/>
      <line no="6">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * Simple and easy faker system for PHP</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="9">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Faker</token>
      </line>
      <line no="10">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">FIRST_VOWEL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">FIRST_CONSONANT</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$vowels</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'aeiou'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$consonants</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'bcdfghjklmnpqrstvwxyz'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$abcLower</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$abcUpper</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'abcdefghijklmnopqrstuvwxyz'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'0123456789'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$vowelsDouble</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ai'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ue'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'oa'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ou'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'oo'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ee'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ui'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ea'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'oi'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$consonantsDouble</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sh'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'th'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ck'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'gh'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'wh'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ch'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ph'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// 'ty', 'cy',  'ry', 'sy', 'ly'</token>
      </line>
      <line no="24"/>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$vowelsCount</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">5</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$consonantsCount</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">21</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27"/>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'vowels'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'consonants'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'vowelsDouble'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'consonantsDouble'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'nextChar'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sameChar'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// percent between 0-100</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sameType'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">4</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// percent between 0-100</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'double'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// percent between 0-100</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39"/>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT">     * __construct</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     * @param  array $options</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT">     * @return Faker</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="48"/>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">array_replace_recursive</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50"/>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'vowels'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">vowels</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'vowels'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">vowelsCount</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mb_strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">vowels</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="55"/>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'consonants'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">consonants</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'consonants'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">consonantsCount</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mb_strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">consonants</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="60"/>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'vowelsDouble'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">vowelsDouble</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'vowelsDouble'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64"/>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'consonantsDouble'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">consonantsDouble</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'consonantsDouble'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="69"/>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="71">
        <token name="T_DOC_COMMENT">     * init</token>
      </line>
      <line no="72">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="73">
        <token name="T_DOC_COMMENT">     * @param  array $options</token>
      </line>
      <line no="74">
        <token name="T_DOC_COMMENT">     * @return Faker</token>
      </line>
      <line no="75">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">init</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$options</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="80"/>
      <line no="81"/>
      <line no="82">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="83">
        <token name="T_DOC_COMMENT">     * word</token>
      </line>
      <line no="84">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="85">
        <token name="T_DOC_COMMENT">     * @param  mixed $length</token>
      </line>
      <line no="86">
        <token name="T_DOC_COMMENT">     * @param  mixed $first</token>
      </line>
      <line no="87">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="88">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">word</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$length</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$first</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$suffixes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="91"/>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$firsts</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">FIRST_VOWEL</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">FIRST_CONSONANT</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="93"/>
      <line no="94">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$length</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$length</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">3</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">10</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$length</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$first</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$first</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$firsts</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">array_rand</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$firsts</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$first</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="96"/>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$char1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$first</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">FIRST_CONSONANT</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRandomConsonant</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRandomVowel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$word</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$char1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99"/>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOR">for</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$length</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_INC">++</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$word</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRandomNextChar</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$word</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="103"/>
      <line no="104">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$suffixes</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$word</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$suffixes</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">array_rand</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$suffixes</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="107"/>
      <line no="108">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">implode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$word</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="110"/>
      <line no="111">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="112">
        <token name="T_DOC_COMMENT">     * words</token>
      </line>
      <line no="113">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="114">
        <token name="T_DOC_COMMENT">     * @param  mixed $count</token>
      </line>
      <line no="115">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="116">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">words</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">4</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$glue</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">4</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">7</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$first</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$suffixes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="119"/>
      <line no="120">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$words</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121"/>
      <line no="122">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOR">for</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_INC">++</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$words</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">word</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$first</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$suffixes</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="125"/>
      <line no="126">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">implode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$glue</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$words</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="128"/>
      <line no="129"/>
      <line no="130">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="131">
        <token name="T_DOC_COMMENT">     * sentence</token>
      </line>
      <line no="132">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="133">
        <token name="T_DOC_COMMENT">     * @param  mixed $words</token>
      </line>
      <line no="134">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="135">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sentence</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$words</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="138"/>
      <line no="139">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$sentence</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">words</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$words</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">14</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ucfirst</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$sentence</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="142"/>
      <line no="143"/>
      <line no="144">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="145">
        <token name="T_DOC_COMMENT">     * repeat</token>
      </line>
      <line no="146">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="147">
        <token name="T_DOC_COMMENT">     * @param  mixed $chars</token>
      </line>
      <line no="148">
        <token name="T_DOC_COMMENT">     * @param  mixed $min</token>
      </line>
      <line no="149">
        <token name="T_DOC_COMMENT">     * @param  mixed $max</token>
      </line>
      <line no="150">
        <token name="T_DOC_COMMENT">     * @param  mixed $segments</token>
      </line>
      <line no="151">
        <token name="T_DOC_COMMENT">     * @param  mixed $glue</token>
      </line>
      <line no="152">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="153">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">repeat</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$chars</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">21</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$segments</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$glue</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="156"/>
      <line no="157">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$parts</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$chars</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chars</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chars</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">str_shuffle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">vowels</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">consonants</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$chars</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="160"/>
      <line no="161">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOR">for</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$s</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$s</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$segments</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$s</token>
        <token name="T_INC">++</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="162"/>
      <line no="163">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$part</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$length</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="165"/>
      <line no="166">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOR">for</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$length</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_INC">++</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$part</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONCAT_EQUAL">.=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$chars</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="169"/>
      <line no="170">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$parts</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$part</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="172"/>
      <line no="173">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">implode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$glue</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$parts</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="175"/>
      <line no="176"/>
      <line no="177"/>
      <line no="178"/>
      <line no="179"/>
      <line no="180">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="181">
        <token name="T_DOC_COMMENT">     * text</token>
      </line>
      <line no="182">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="183">
        <token name="T_DOC_COMMENT">     * @param  int $sentences</token>
      </line>
      <line no="184">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="185">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">text</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$sentences</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">5</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">4</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">7</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="188"/>
      <line no="189">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$text</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="190"/>
      <line no="191">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOR">for</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sentences</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_INC">++</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$text</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">sentence</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="194"/>
      <line no="195">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">implode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$text</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="197"/>
      <line no="198"/>
      <line no="199"/>
      <line no="200">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="201">
        <token name="T_DOC_COMMENT">     * getRandomConsonant</token>
      </line>
      <line no="202">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="203">
        <token name="T_DOC_COMMENT">     * @param  mixed $double</token>
      </line>
      <line no="204">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="205">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getRandomConsonant</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$double</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="208"/>
      <line no="209">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$double</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$position</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">consonantsDouble</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">consonantsDouble</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$position</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$position</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">consonantsCount</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mb_substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">consonants</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$position</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="217"/>
      <line no="218"/>
      <line no="219">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="220">
        <token name="T_DOC_COMMENT">     * getRandomVowel</token>
      </line>
      <line no="221">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="222">
        <token name="T_DOC_COMMENT">     * @param  mixed $double</token>
      </line>
      <line no="223">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="224">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getRandomVowel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$double</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="227"/>
      <line no="228">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$double</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$position</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">vowelsDouble</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="230">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">vowelsDouble</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$position</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="231">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$position</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">vowelsCount</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mb_substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">vowels</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$position</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="234">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="236"/>
      <line no="237"/>
      <line no="238">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="239">
        <token name="T_DOC_COMMENT">     * getRandomNextChar</token>
      </line>
      <line no="240">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="241">
        <token name="T_DOC_COMMENT">     * @param  mixed $prev</token>
      </line>
      <line no="242">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="243">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getRandomNextChar</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$prev</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="246"/>
      <line no="247">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$r1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">100</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="248">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$r2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">100</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="249">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$r3</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">100</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="250"/>
      <line no="251">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'nextChar'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sameChar'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$r1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="252">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$prev</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="253">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'nextChar'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sameType'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$r2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isVowel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$prev</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRandomVowel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRandomConsonant</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="255">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">options</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'nextChar'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'double'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$r3</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="256">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isVowel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$prev</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRandomVowel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRandomConsonant</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="257">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="258">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isVowel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$prev</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRandomConsonant</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRandomVowel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="259">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="260"/>
      <line no="261">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="262">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="263"/>
      <line no="264">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="265">
        <token name="T_DOC_COMMENT">     * isVowel</token>
      </line>
      <line no="266">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="267">
        <token name="T_DOC_COMMENT">     * @param  mixed $char</token>
      </line>
      <line no="268">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="269">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="270">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isVowel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="271">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="272">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">vowels</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="273">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="274"/>
      <line no="275"/>
      <line no="276">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="277">
        <token name="T_DOC_COMMENT">     * firstname</token>
      </line>
      <line no="278">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="279">
        <token name="T_DOC_COMMENT">     * @param  mixed $length</token>
      </line>
      <line no="280">
        <token name="T_DOC_COMMENT">     * @param  mixed $first</token>
      </line>
      <line no="281">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="282">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="283">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">firstname</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">5</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">7</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$first</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$suffixes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="284">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="285"/>
      <line no="286">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="287"/>
      <line no="288">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$firstname</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">word</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$first</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$suffixes</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="289">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ucfirst</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$firstname</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="290">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="291"/>
      <line no="292">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="293">
        <token name="T_DOC_COMMENT">     * lastname</token>
      </line>
      <line no="294">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="295">
        <token name="T_DOC_COMMENT">     * @param  mixed $length</token>
      </line>
      <line no="296">
        <token name="T_DOC_COMMENT">     * @param  mixed $first</token>
      </line>
      <line no="297">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="298">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="299">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">lastname</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">5</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">7</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$first</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$suffixes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="300">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="301">
        <token name="T_WHITESPACE">        </token>
      </line>
      <line no="302">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="303"/>
      <line no="304">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$lastname</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">word</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$first</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$suffixes</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="305">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ucfirst</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lastname</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="306">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="307"/>
      <line no="308"/>
      <line no="309">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="310">
        <token name="T_DOC_COMMENT">     * fullname</token>
      </line>
      <line no="311">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="312">
        <token name="T_DOC_COMMENT">     * @param  mixed $lengthFirst</token>
      </line>
      <line no="313">
        <token name="T_DOC_COMMENT">     * @param  mixed $lengthLast</token>
      </line>
      <line no="314">
        <token name="T_DOC_COMMENT">     * @param  mixed $reverse</token>
      </line>
      <line no="315">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="316">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="317">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fullname</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lengthFirst</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$lengthLast</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$reverse</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="318">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="319"/>
      <line no="320">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$lengthFirst</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$lengthFirst</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$lengthFirst</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">4</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">10</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="321">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$lengthLast</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$lengthLast</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$lengthLast</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">4</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">10</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="322"/>
      <line no="323">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$reverse</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">implode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="324">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastname</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lengthLast</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="325">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">firstname</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lengthFirst</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="326">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">implode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">' '</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="327">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">firstname</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lengthFirst</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="328">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">lastname</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$lengthLast</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="329">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="330">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="331"/>
      <line no="332"/>
      <line no="333">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="334">
        <token name="T_DOC_COMMENT">     * int</token>
      </line>
      <line no="335">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="336">
        <token name="T_DOC_COMMENT">     * @param  mixed $min</token>
      </line>
      <line no="337">
        <token name="T_DOC_COMMENT">     * @param  mixed $max</token>
      </line>
      <line no="338">
        <token name="T_DOC_COMMENT">     * @return integer</token>
      </line>
      <line no="339">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="340">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">10000</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="341">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="342">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="343">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="344"/>
      <line no="345">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="346">
        <token name="T_DOC_COMMENT">     * boolean</token>
      </line>
      <line no="347">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="348">
        <token name="T_DOC_COMMENT">     * @param  mixed $min</token>
      </line>
      <line no="349">
        <token name="T_DOC_COMMENT">     * @param  mixed $max</token>
      </line>
      <line no="350">
        <token name="T_DOC_COMMENT">     * @return boolean</token>
      </line>
      <line no="351">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="352">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">boolean</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="353">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="354">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOL_CAST">(bool)</token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="355">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="356"/>
      <line no="357"/>
      <line no="358">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="359">
        <token name="T_DOC_COMMENT">     * mask</token>
      </line>
      <line no="360">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="361">
        <token name="T_DOC_COMMENT">     * @param  mixed $mask</token>
      </line>
      <line no="362">
        <token name="T_DOC_COMMENT">     * @param  mixed $input</token>
      </line>
      <line no="363">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="364">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="365">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mask</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$mask</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'###-###-###'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$input</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ABCDEFGHJKLMNPRSTUVWXYZ0123456789'</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="366">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="367"/>
      <line no="368">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mb_strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$input</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="369">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$chars</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mb_str_split</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$mask</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="370">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="371"/>
      <line no="372"/>
      <line no="373"/>
      <line no="374">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$chars</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="375">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'#'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$input</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">random_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$char</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="376">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="377"/>
      <line no="378">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">implode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="379">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="380"/>
      <line no="381"/>
      <line no="382">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="383">
        <token name="T_DOC_COMMENT">     * email</token>
      </line>
      <line no="384">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="385">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="386">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="387">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">email</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="388">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="389"/>
      <line no="390">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtolower</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">words</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">3</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">12</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'@'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">word</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">words</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">5</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="391">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="392"/>
      <line no="393"/>
      <line no="394">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="395">
        <token name="T_DOC_COMMENT">     * password</token>
      </line>
      <line no="396">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="397">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="398">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="399">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">password</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">8</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">16</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$segments</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$glue</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'-'</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="400">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="401"/>
      <line no="402">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$chars</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abcLower</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">abcUpper</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">numbers</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="403">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">repeat</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$chars</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$segments</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$glue</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="404">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="405">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="406"/>
    </source>
  </file>
</phpunit>
